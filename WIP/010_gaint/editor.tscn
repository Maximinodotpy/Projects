[gd_scene load_steps=16 format=3 uid="uid://cv4n06irlrld8"]

[ext_resource type="Script" path="res://MenuBar.gd" id="1_202ru"]
[ext_resource type="PackedScene" uid="uid://yyinre165ruo" path="res://Windows/Layers.tscn" id="2_e1rt3"]
[ext_resource type="PackedScene" uid="uid://cu1vnr3s7lo65" path="res://Windows/TabContainer/WindowTabContainers.tscn" id="3_83sol"]
[ext_resource type="PackedScene" uid="uid://ci6knjlc235s" path="res://Windows/Tools.tscn" id="3_lw7ne"]
[ext_resource type="PackedScene" uid="uid://bxg052igwxdw7" path="res://Windows/History.tscn" id="4_mgnxg"]
[ext_resource type="PackedScene" uid="uid://c1sik162s4gy6" path="res://Windows/ImageInfo.tscn" id="6_yutrm"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_1tyfi"]
bg_color = Color(0.6, 0.6, 0.6, 0)

[sub_resource type="GDScript" id="GDScript_im2u8"]
script/source = "extends TextureRect

var canvas = []

func _draw():
	# Draw White Background
	if not UserInterface.transparent_bg:
		draw_rect(Layers.get_image_rect(), Color.WHITE)

	for i in canvas:
		draw_rect(Rect2(i, Vector2(1, 1)), Color.BLACK)

	for layer in Layers.get_layer_data():
		if layer.visible:
			draw_texture(layer.layer_texture, Vector2.ZERO)

func _process(delta):
	size = Layers.get_image_rect().size
	queue_redraw()
"

[sub_resource type="GDScript" id="GDScript_ugi2l"]
resource_name = "Selection Texture"
script/source = "extends TextureRect

func _ready():
	Selection.selection_changed.connect(queue_redraw)

func _draw():
	print('Redrawing selection')
	for i in Selection.get_selection():
		draw_rect(Rect2(i, Vector2.ONE), Color(0, 0, 1, 0.3))
"

[sub_resource type="Animation" id="Animation_u2k1v"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_6ot04"]
resource_name = "wubble"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5, 1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0.478431), Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_e5wkp"]
_data = {
"RESET": SubResource("Animation_u2k1v"),
"wubble": SubResource("Animation_6ot04")
}

[sub_resource type="GDScript" id="GDScript_wkwy4"]
resource_name = "BG Gridlines"
script/source = "extends TextureRect

func _draw():
	var step_options: Dictionary = {
		0: 1000,
		1: 100,
		2: 25,
		10: 5,
		37: 1,
	}

	var steps = 100

	for current_zoom in step_options.keys():
		var current_index = step_options.keys().find(current_zoom)

		var next_zoom = 0

		if current_index == step_options.keys().size() - 1:
			next_zoom = INF
		else:
			next_zoom = step_options.keys()[current_index + 1]

		if get_parent().scale.x > current_zoom and get_parent().scale.x < next_zoom:
			steps = step_options[current_zoom]

	if UserInterface.gridline_bg:
		for x in range(steps, Layers.image_dimensions.x, steps):
			draw_line(Vector2(x, 0), Vector2(x, Layers.image_dimensions.y), Color.GRAY, 0.05 * steps / 2)

		for y in range(steps, Layers.image_dimensions.y, steps):
			draw_line(Vector2(0, y), Vector2(Layers.image_dimensions.x, y), Color.GRAY, 0.05 * steps / 2)

func _process(delta):
	queue_redraw()
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_x1dpa"]
draw_center = false
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color(0, 0, 0, 1)
expand_margin_left = 1.0
expand_margin_top = 1.0
expand_margin_right = 1.0
expand_margin_bottom = 1.0

[sub_resource type="GDScript" id="GDScript_bte6l"]
resource_name = "Bottom HBox"
script/source = "extends HBoxContainer

var zoom_label: Label
var mouse_pos_label: Label
var fps_label: Label

# Called when the node enters the scene tree for the first time.
func _ready():
	zoom_label = Label.new()
	mouse_pos_label = Label.new()
	fps_label = Label.new()

	add_child(zoom_label)
	add_child(mouse_pos_label)
	add_child(fps_label)

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	zoom_label.text = '%s%%' % floor(UserInterface.canvas_texture.scale.x * 100)

	var mouse_pos = UserInterface.canvas_texture.get_local_mouse_position()

	mouse_pos_label.text = '(%s, %s)' % [
		floor(mouse_pos.x),
		floor(mouse_pos.y),
	]

	if not Layers.get_image_rect().has_point(mouse_pos):
		mouse_pos_label.modulate = Color(0.4, 0.4, 0.4)
	else:
		mouse_pos_label.modulate = Color.WHITE

	fps_label.text = '%s FPS' % Engine.get_frames_per_second()
"

[node name="Control" type="VBoxContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/separation = 0

[node name="Header" type="PanelContainer" parent="."]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="Header"]
layout_mode = 2

[node name="MenuBar" type="MenuBar" parent="Header/HBoxContainer"]
layout_mode = 2
flat = true
script = ExtResource("1_202ru")

[node name="Current File Label" type="Label" parent="Header/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
text = "Unsaved File"
horizontal_alignment = 1

[node name="rc" type="PanelContainer" parent="."]
visible = false
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_1tyfi")

[node name="Ribbon Container" type="MarginContainer" parent="rc"]
layout_mode = 2
theme_override_constants/margin_left = 10
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 10
theme_override_constants/margin_bottom = 10

[node name="Label" type="Label" parent="rc/Ribbon Container"]
layout_mode = 2
text = "fasdfasd"

[node name="Main" type="PanelContainer" parent="."]
layout_mode = 2
size_flags_vertical = 3

[node name="vbox" type="VBoxContainer" parent="Main"]
layout_mode = 2

[node name="Main H Split" type="HSplitContainer" parent="Main/vbox"]
layout_direction = 3
layout_mode = 2
size_flags_vertical = 3
split_offset = 700

[node name="Aside" type="PanelContainer" parent="Main/vbox/Main H Split"]
layout_direction = 2
layout_mode = 2

[node name="HBox" type="HBoxContainer" parent="Main/vbox/Main H Split/Aside"]
layout_mode = 2

[node name="Tools" parent="Main/vbox/Main H Split/Aside/HBox" instance=ExtResource("3_lw7ne")]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="Main/vbox/Main H Split/Aside/HBox"]
layout_mode = 2
size_flags_horizontal = 3

[node name="VBoxContainer" type="VBoxContainer" parent="Main/vbox/Main H Split/Aside/HBox/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="tabs" parent="Main/vbox/Main H Split/Aside/HBox/HBoxContainer/VBoxContainer" instance=ExtResource("3_83sol")]
layout_mode = 2

[node name="Layers" parent="Main/vbox/Main H Split/Aside/HBox/HBoxContainer/VBoxContainer/tabs" instance=ExtResource("2_e1rt3")]
layout_mode = 2

[node name="History" parent="Main/vbox/Main H Split/Aside/HBox/HBoxContainer/VBoxContainer/tabs" instance=ExtResource("4_mgnxg")]
visible = false
layout_mode = 2

[node name="tabs2" parent="Main/vbox/Main H Split/Aside/HBox/HBoxContainer/VBoxContainer" instance=ExtResource("3_83sol")]
layout_mode = 2

[node name="ImageInfo" parent="Main/vbox/Main H Split/Aside/HBox/HBoxContainer/VBoxContainer/tabs2" instance=ExtResource("6_yutrm")]
layout_mode = 2

[node name="container" type="SubViewportContainer" parent="Main/vbox/Main H Split"]
layout_mode = 2
stretch = true

[node name="SubViewport" type="SubViewport" parent="Main/vbox/Main H Split/container"]
handle_input_locally = false
size = Vector2i(440, 606)
render_target_update_mode = 4

[node name="Canvas Container" type="Control" parent="Main/vbox/Main H Split/container/SubViewport"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Canvas Texture" type="TextureRect" parent="Main/vbox/Main H Split/container/SubViewport/Canvas Container"]
texture_filter = 1
layout_mode = 1
anchors_preset = -1
anchor_right = 0.182857
anchor_bottom = 0.197531
offset_right = 120.686
offset_bottom = 120.099
grow_horizontal = 2
grow_vertical = 2
stretch_mode = 2
script = SubResource("GDScript_im2u8")
metadata/_edit_use_anchors_ = true

[node name="Preview Texture" type="TextureRect" parent="Main/vbox/Main H Split/container/SubViewport/Canvas Container/Canvas Texture"]
modulate = Color(1, 1, 1, 0.588235)
texture_filter = 1
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
stretch_mode = 2
metadata/_edit_use_anchors_ = true

[node name="Selection Texture" type="TextureRect" parent="Main/vbox/Main H Split/container/SubViewport/Canvas Container/Canvas Texture"]
texture_filter = 1
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
stretch_mode = 2
script = SubResource("GDScript_ugi2l")
metadata/_edit_use_anchors_ = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="Main/vbox/Main H Split/container/SubViewport/Canvas Container/Canvas Texture/Selection Texture"]
libraries = {
"": SubResource("AnimationLibrary_e5wkp")
}
autoplay = "wubble"

[node name="Background Gridlines" type="TextureRect" parent="Main/vbox/Main H Split/container/SubViewport/Canvas Container/Canvas Texture"]
modulate = Color(1, 1, 1, 0.588235)
texture_filter = 1
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
stretch_mode = 2
script = SubResource("GDScript_wkwy4")
metadata/_edit_use_anchors_ = true

[node name="CanvasOutline" type="Panel" parent="Main/vbox/Main H Split/container/SubViewport/Canvas Container/Canvas Texture"]
layout_mode = 1
anchors_preset = -1
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_x1dpa")

[node name="p" type="PanelContainer" parent="Main/vbox"]
layout_mode = 2

[node name="m" type="MarginContainer" parent="Main/vbox/p"]
layout_mode = 2
theme_override_constants/margin_left = 10
theme_override_constants/margin_top = 5
theme_override_constants/margin_right = 10
theme_override_constants/margin_bottom = 10

[node name="Bottom HBox" type="HBoxContainer" parent="Main/vbox/p/m"]
layout_mode = 2
theme_override_constants/separation = 20
script = SubResource("GDScript_bte6l")
